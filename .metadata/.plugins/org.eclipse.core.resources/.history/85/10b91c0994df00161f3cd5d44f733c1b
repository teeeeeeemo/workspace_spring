package com.springbook.view.board;

import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.SessionAttributes;

import com.springbook.biz.board.BoardService;
import com.springbook.biz.board.BoardVO;

@Controller
@SessionAttributes("board")
public class BoardController {
	
	//boardService의 멤버변수 위에 @Autowired를 설정했으므로 
	//BoardService타입의 BoardServiceImpl객체가 의존성 주입된다.
	@Autowired
	private BoardService boardService;
	
	//@ModelAttribute : Command객체의 이름을 변경 할수있음, View(JSP)에서 사용할 데이터 설정 가능.
	//@RequestMapping어노테이션이 적용된 메소드보다먼저 호출된다. 
	//@ModelAttribute가 설정된 메소드 실행 결과로 리턴된 객체는 자동으로 Model에 저장된
	
	@ModelAttribute("conditionMap")
	public Map<String, String> searchConditionMap() {
		System.out.println("검색 조건 목록 설정"); ///
		Map<String, String> conditionMap = new HashMap<String, String>();
		conditionMap.put("제목", "TITLE");
		conditionMap.put("내용", "CONTENT");
		//conditionMap.put("작성자", "WRITER"); ///
		return conditionMap;
	}
	
	@RequestMapping("/getBoardList.do")
	public String getBoardList(BoardVO vo, Model model) {
		System.out.println("글 목록 검색");///
		// Model 정보 저장
		model.addAttribute("boardList", boardService.getBoardList(vo));
		return "getBoardList.jsp";
	}
	
	
	@RequestMapping("/getBoard.do")
	public String getBoard(BoardVO vo, Model model) {
		System.out.println("글 상세 조회 처리"); ///
		model.addAttribute("board",  boardService.getBoard(vo)); //Model 정보 저장
		return "getBoard.jsp";
	}
	
	@RequestMapping(value="/insertBoard.do")
	public String insertBoard(BoardVO vo){
		System.out.println("글 등록 처리");///
		//boardService.insertBoard(vo);
		return "getBoardList.do";
	}
	
	@RequestMapping("/updateBoard.do")
	public String updateBoard(@ModelAttribute("board") BoardVO vo) {
		System.out.println("글 수정 처리"); ///
		boardService.updateBoard(vo);
		return "getBoardList.do";
		
	}
	
	@RequestMapping("/deleteBoard.do")
	public String deleteBoard(BoardVO vo) {
		System.out.println("글 삭제 처리"); ///
		boardService.deleteBoard(vo);
		return "getBoardList.do";
	}
}
